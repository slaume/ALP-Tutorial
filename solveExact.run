#compute exact value function with value iteration
let {X in 0..Xmax} vExact[X] := 0;
for {t in T..0 by -1} {
	display t;
	for {X in 0..Xmax} {
		display X;
		let vUpdate[X] := max{A in 0..Amax} (
			-beta*sum{i in 1..I}floor((X mod (xmax+1)^i)/((xmax+1)^(i-1)))
			+sum{l in 1..L, i in 1..I}lambda[l]*p[i]*(
				floor((A mod 2^l)/(2^(l-1)))*r[l]*(if floor((X mod (xmax+1)^i)/((xmax+1)^(i-1))) < xmax then 1 else 0)
				+alpha*sum{K in 0..Kmax}(
					prod{ii in 1..I}(q[ii]^(floor((K mod 2^ii)/(2^(ii-1))))*(1-q[ii])^(1-floor((K mod 2^ii)/(2^(ii-1)))))
				)*(
					vExact[sum{ii in 1..I}(
						max(0,floor((X mod (xmax+1)^ii)/((xmax+1)^(ii-1)))
							-floor((K mod 2^ii)/(2^(ii-1)))
							+floor((A mod 2^l)/(2^(l-1)))*(if ii=i and floor((X mod (xmax+1)^ii)/((xmax+1)^(ii-1)))<xmax then 1 else 0))
					)*(xmax+1)^(ii-1)]
				)
			)
		);
	}
	let {X in 0..Xmax} vExact[X] := vUpdate[X];
}